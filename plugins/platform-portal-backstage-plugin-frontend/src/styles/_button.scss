@use "./constants";

// reset all html buttons
button {
  border: none;
  background: none;
  padding: 0;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: currentColor;
  cursor: pointer;

  &.disabled {
    cursor: default;
    background: constants.$juneGrey;
  }
}

// A consistent button for general use.
//  We've avoided being opionated here about "display"
//    type here, but one could certainly follow "inline-..." conventions.
.styledButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: currentColor;
  cursor: pointer;

  border-radius: 2px;
  height: 40px;
  min-width: 90px;
  line-height: 40px;
  padding: 0 10px;
  color: white;
  font-size: 14px;
  font-weight: 600;
  transition: background-color 0.1s linear;

  //
  // Primary states
  //
  border: 1px solid constants.$januaryGrey;
  background-color: constants.$primaryColor;
  &:hover {
    background-color: lighten(constants.$primaryColor, 10);
  }
  &:active {
    background-color: lighten(constants.$primaryColor, 20);
  }

  //
  // Pale states
  //
  &.paleButton {
    border-color: constants.$primaryColor;
    background-color: white;
    color: constants.$primaryColor;
    &:hover {
      border-color: lighten(constants.$primaryColor, 10);
      background-color: lighten(constants.$primaryColor, 10);
      color: white;
    }
    &:active {
      border-color: lighten(constants.$primaryColor, 20);
      background-color: lighten(constants.$primaryColor, 20);
      color: white;
    }
  }

  &.smallButton {
    height: 26px;
    line-height: 26px;
  }

  //
  // Just text states
  //
  &.justText {
    display: inline;
    height: auto;
    line-height: inherit;
    border: none;
    background-color: transparent;
    font-size: inherit;
    padding: 0;

    color: constants.$primaryColor;
    font-weight: 500;
    &:hover {
      color: lighten(constants.$primaryColor, 10);
    }
    &:active {
      color: lighten(constants.$primaryColor, 20);
    }
  }

  //
  // Success states
  //
  &.success {
    background-color: constants.$midGreen;
    &:hover {
      background-color: lighten(constants.$midGreen, 10);
    }
    &:active {
      background-color: lighten(constants.$midGreen, 20);
    }
  }

  //
  // Error states
  //
  &.error {
    background-color: constants.$pumpkinOrange;
    &:hover {
      background-color: lighten(constants.$pumpkinOrange, 10);
    }
    &:active {
      background-color: lighten(constants.$pumpkinOrange, 20);
    }
  }

  //
  // Disabled states
  //
  &.disabled,
  &.disabled:hover,
  &.disabled:active {
    cursor: not-allowed;
    background-color: constants.$juneGrey;
  }
}

.swaggerViewToggleHolder {
  width: calc(100vw - 16px);
  max-width: 1920px;
  padding: 0px 30px 5px 0px;
  margin: 0 auto;
  display: block;
  text-align: right;
  button {
    color: constants.$primaryColor;
  }
}
